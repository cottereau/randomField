#### PRESUMED STRUCTURE
#		>>build        !(You are here to call the "make" command)
#		>>randomField  !(This is the git repository)
#			-BLAS
#			-SRC_EXE
#			-SRC_LIB
#

#####INSTALL (Should work with this makefile if you set all standard paths -- Tested 31/03/2016)
#Install Xcode from app store
#Install macports (https://www.macports.org/install.php)
## On Terminal
#sudo port selfupdate
#sudo port upgrade outdated
#sudo port install gcc5
#sudo port select --set gcc mp-gcc5
#sudo port install openmpi-gcc5
#sudo port select --set mpi openmpi-gcc5-fortran
#sudo port install hdf5 +gcc5 +fortran +szip +openmpi -cxx
#sudo port install fftw-3 +gcc5 +fortran +openmpi
#sudo ln -sf /opt/local/bin/mpifort-openmpi-gcc5 /opt/local/bin/mpifort

#### PATH TO HDF5 AND MPI LIBRARY AND INCLUDES - to be modified by user (to be completed if not the stantard ones)
LIBHDF5     = -L/opt/local/lib -lhdf5 -lhdf5_hl -lhdf5_fortran -lhdf5hl_fortran
INCLUDEHDF5 = -I/opt/local/include
LIBFFTW     = -L/opt/local/lib -lfftw3 -lfftw3_threads -lfftw3_mpi
INCLUDEFFTW = -I/opt/local/include
LIBMPI      = -I/opt/local/lib/openmpi-gcc5 -lopen-trace-format -lotfaux -lvt-hyb -lvt-mpi-unify -lvt-mpi -lvt-mt -lvt-pomp -lvt
INCLUDEMPI  = -I/opt/local/include/openmpi-gcc5

EXEC  = randomField.exe
EXEC2 = statistics.exe
FC   = mpifort
#FFLAGS = -g -cpp -Wall -Werror -ffree-line-length-none -DMAKELOG
FFLAGS = -g -cpp -ffree-line-length-none # -DMAKELOG

#### FROM THIS POINT ON THE USER SHOULD NOT MODIFY
RM := rm -rf

#Specifying the sources "f90" and "f"
SRCS = $(wildcard *.f90 *.f) 

#Create a ".f90" for each source
#OBJS = $(SRCS:.f90=.o) #SYNTAX NOT WORKING

RF_OBJ += ./main_RandomField.o \
./randomFieldND.o \
./spectra_RF.o \
./writeResultFile_RF.o \
./mesh_RF.o \
./type_MESH.o \
./type_RF.o \
./topography_RF.o \
./readUNV_RF.o \
./localization_RF.o \
./type_inputRF.o \
./sample_RF.o \
./calls_RF.o \
./ranlib.o \
./rnglib.o \
./ipmpar.o \
./spmpar.o \
./cumnor.o \
./devlpl.o \
./stvaln.o \
./dinvnr.o \
./cdfnor.o

STAT_OBJ += ./main_Stat.o \
./statistics_RF.o \
./type_STAT.o

COMM_OBJ += ./charFunctions.o \
./constants_RF.o \
./common_variables_RF.o \
./displayCarvalhol.o \
./hdf5_RF.o \
./write_Log_File.o \
./readFile_RF.o \
./math_RF.o \
./dgemm.o \
./lsame.o \
./xerbla.o \
./dger.o \
./systemUt_RF.o \
./fftw3.o

#./type_TEST.o \
#./test_func_RF.o \

LIBS = $(LIBHDF5) $(LIBMPI) $(LIBFFTW)
INCLUDE = $(INCLUDEHDF5) $(INCLUDEMPI) $(INCLUDEFFTW)

#Dependencies
main_RandomField.o   : calls_RF.o \
	               charFunctions.o \
		       constants_RF.o \
		       common_variables_RF.o \
		       displayCarvalhol.o \
		       dger.o mesh_RF.o \
		       randomFieldND.o \
		       readFile_RF.o \
		       readUNV_RF.o \
		       sample_RF.o \
		       systemUt_RF.o \
                       statistics_RF.o \
                       type_inputRF.o \
		       type_MESH.o \
		       type_RF.o \
		       write_Log_File.o \
		       writeResultFile_RF.o
main_Stat.o          : charFunctions.o \
                       common_variables_RF.o \
		       constants_RF.o \
		       displayCarvalhol.o \
	               hdf5_RF.o \
		       math_RF.o \
                       write_Log_File.o \
                       readFile_RF.o \
                       systemUt_RF.o \
		       statistics_RF.o \
		       type_STAT.o	           				  
calls_RF.o           : constants_RF.o \
		       common_variables_RF.o \
		       displayCarvalhol.o \
		       dgemm.o \
		       localization_RF.o \
		       math_RF.o \
		       mesh_RF.o \
		       randomFieldND.o \
		       ranlib.o \
		       type_inputRF.o \
		       type_MESH.o \
		       type_RF.o \
		       write_Log_File.o \
		       writeResultFile_RF.o \
		       sample_RF.o
sample_RF.o          : constants_RF.o \
		       common_variables_RF.o \
		       displayCarvalhol.o \
		       dgemm.o \
		       localization_RF.o \
		       math_RF.o \
		       mesh_RF.o \
		       randomFieldND.o \
		       ranlib.o \
		       type_inputRF.o \
		       type_MESH.o \
		       type_RF.o \
                       topography_RF.o \
		       write_Log_File.o \
		       writeResultFile_RF.o			           
randomFieldND.o      : constants_RF.o \
                       common_variables_RF.o \
                       displayCarvalhol.o \
		       dgemm.o \
		       fftw3.o \
		       math_RF.o \
		       mesh_RF.o \
		       ranlib.o \
		       spectra_RF.o \
		       type_MESH.o \
		       type_RF.o \
		       write_Log_File.o \
		       writeResultFile_RF.o
localization_RF.o    : constants_RF.o \
		       common_variables_RF.o \
                       displayCarvalhol.o \
		       math_RF.o \
		       randomFieldND.o \
		       type_inputRF.o \
		       type_MESH.o \
		       type_RF.o \
		       write_Log_File.o
mesh_RF.o            : fftw3.o \
                       math_RF.o \
		       type_MESH.o \
                       type_RF.o \
		       write_Log_File.o
topography_RF.o      : fftw3.o \
                       math_RF.o \
                       type_inputRF.o \
		       type_MESH.o \
                       type_RF.o \
		       write_Log_File.o			           
writeResultFile_RF.o : displayCarvalhol.o \
		       math_RF.o \
		       statistics_RF.o \
		       write_Log_File.o \
		       constants_RF.o \
		       mesh_RF.o \
		       type_RF.o \
		       type_MESH.o \
		       hdf5_RF.o
hdf5_RF.o            : displayCarvalhol.o \
                       math_RF.o \
                       write_Log_File.o
statistics_RF.o      : displayCarvalhol.o \
		       math_RF.o \
		       write_Log_File.o \
		       type_STAT.o
spectra_RF.o         : displayCarvalhol.o \
		       math_RF.o \
		       write_Log_File.o \
		       constants_RF.o \
                       ranlib.o \
		       type_RF.o
math_RF.o            : displayCarvalhol.o \
		       write_Log_File.o \
		       constants_RF.o
readUNV_RF.o         : displayCarvalhol.o \
		       write_Log_File.o
systemUt_RF.o        : write_Log_File.o
write_Log_File.o     : charFunctions.o
charFunctions.o      : constants_RF.o
common_variables_RF.o      : constants_RF.o
displayCarvalhol.o   : constants_RF.o \
                       write_Log_File.o
type_RF.o            : charFunctions.o \
                       type_inputRF.o \
                       type_inputRF.o \
                       type_MESH.o 
type_MESH.o          : charFunctions.o \
		       type_inputRF.o
type_inputRF.o       : readFile_RF.o \
                       readUNV_RF.o \
                       systemUt_RF.o
dgemm.o              : lsame.o xerbla.o
dger.o               : xerbla.o
ranlib.o             : rnglib.o
spmpar.o             : ipmpar.o
cumnor.o             : spmpar.o
stvaln.o             : devlpl.o
dinvnr.o             : stvaln.o \
		       cumnor.o
cdfnor.o             : dinvnr.o \
		       spmpar.o \
		       cumnor.o

# Making all the ".o" from the ".f90"
%.o: ../randomField/SRC_EXE/%.f90
	@echo 'Building file: $<'
	@echo 'Invoking: Fortran Compiler'
	$(FC) $(FFLAGS) -o "$@" $(INCLUDE) -c "$<"
	@echo 'Finished building: $<'
	@echo ' '
		
%.o: ../randomField/SRC_LIB/%.f90
	@echo 'Building file: $<'
	@echo 'Invoking: Fortran Compiler'
	$(FC) $(FFLAGS) -o "$@" $(INCLUDE) -c "$<"
	@echo 'Finished building: $<'
	@echo ' '

%.o: ../randomField/BLAS/%.f90
	@echo 'Building file: $<'
	@echo 'Invoking: Fortran Compiler'
	$(FC) $(FFLAGS) -o "$@" $(INCLUDE) -c "$<"
	@echo 'Finished building: $<'
	@echo ' '
	
%.o: ../randomField/RANDLIB/%.f90
	@echo 'Building file: $<'
	@echo 'Invoking: Fortran Compiler'
	$(FC) $(FFLAGS) -o "$@" $(INCLUDE) -c "$<"
	@echo 'Finished building: $<'
	@echo ' '	
	
%.o: ../randomField/dcdflib/src/%.f
	@echo 'Building file: $<'
	@echo 'Invoking: Fortran Compiler'
	$(FC) $(FFLAGS) -o "$@" $(INCLUDE) -c "$<"
	@echo 'Finished building: $<'
	@echo ' '	
	
# All Target
all: randomField statistics
#all: randomField

# Tool invocations
randomField: $(RF_OBJ) $(COMM_OBJ)
		@echo 'Building target: $@'
		@echo 'Invoking: Fortran Linker'
		$(FC) -o $(EXEC) $(FFLAGS) $(RF_OBJ) $(COMM_OBJ) $(INCLUDE) $(LIBS)
		@echo 'Finished building target: $@'
		@echo ' '	
	
statistics: $(STAT_OBJ) $(COMM_OBJ)
		@echo 'Building target: $@'
		@echo 'Invoking: Fortran Linker'
		$(FC) -o $(EXEC2) $(FFLAGS) $(STAT_OBJ) $(COMM_OBJ) $(INCLUDE) $(LIBS)
		@echo 'Finished building target: $@'
		@echo ' '

# Other Targets
clean:
		-$(RM) $(EXEC) $(EXEC2) $(RF_OBJ) $(STAT_OBJ) $(COMM_OBJ) *.mod
		-@echo 'Finished excluding'

.PHONY: all clean dependents
.SECONDARY:
